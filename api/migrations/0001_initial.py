# Generated by Django 2.1 on 2019-01-08 18:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskBkp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('max_execution_time_in_minutes', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_bkp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestcaseBkp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField(blank=True, null=True)),
                ('steps', models.TextField(blank=True, null=True)),
                ('expected_results', models.TextField(blank=True, null=True)),
                ('submission_time', models.CharField(blank=True, max_length=500, null=True)),
                ('tag_name', models.TextField(blank=True, null=True)),
                ('last_edited_submission_time', models.CharField(blank=True, max_length=500, null=True)),
                ('modified_owner', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'testcase_bkp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email_address', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'person',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tafv2Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField(blank=True, null=True)),
                ('script', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('steps', models.TextField(blank=True, null=True)),
                ('expected_results', models.TextField(blank=True, null=True)),
                ('last_modified_by', models.CharField(blank=True, max_length=500, null=True)),
                ('added_at', models.CharField(blank=True, max_length=500, null=True)),
                ('last_updated_at', models.CharField(blank=True, max_length=500, null=True)),
                ('max_execution_time_in_minutes', models.SmallIntegerField(blank=True, null=True)),
                ('tag_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tafv2_task',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True)),
            ],
            options={
                'db_table': 'tags',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaskExecutionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_id', models.BigIntegerField(blank=True, null=True)),
                ('task_id', models.BigIntegerField(blank=True, null=True)),
                ('result', models.SmallIntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_execution_result',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Taskgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True, unique=True)),
                ('last_modified_by', models.CharField(blank=True, max_length=500, null=True)),
                ('added_at', models.CharField(blank=True, max_length=500, null=True)),
                ('last_updated_at', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'taskgroup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Taskgroupexecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('alias_name', models.CharField(blank=True, max_length=500, null=True)),
                ('mode', models.CharField(blank=True, max_length=30, null=True)),
                ('taskgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Taskgroup')),
            ],
            options={
                'db_table': 'taskgroupexecution',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaskgroupTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.BigIntegerField(blank=True, null=True)),
                ('taskgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Taskgroup')),
            ],
            options={
                'db_table': 'taskgroup_task',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ApiTask',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.Person')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('owner_id', models.SmallIntegerField(blank=True, null=True)),
                ('max_execution_time_in_minutes', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'api_task',
                'managed': False,
            },
        ),
        migrations.AddField(
            model_name='taskgroup',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Person'),
        ),
        migrations.AddField(
            model_name='tafv2task',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Person'),
        ),
    ]
